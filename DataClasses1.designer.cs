#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Storage
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Склад")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertГотовая_продукция(Готовая_продукция instance);
    partial void UpdateГотовая_продукция(Готовая_продукция instance);
    partial void DeleteГотовая_продукция(Готовая_продукция instance);
    partial void InsertЗаказчик_ГП(Заказчик_ГП instance);
    partial void UpdateЗаказчик_ГП(Заказчик_ГП instance);
    partial void DeleteЗаказчик_ГП(Заказчик_ГП instance);
    partial void InsertИнформация_по_товарам(Информация_по_товарам instance);
    partial void UpdateИнформация_по_товарам(Информация_по_товарам instance);
    partial void DeleteИнформация_по_товарам(Информация_по_товарам instance);
    partial void InsertОперации_по_готовой_продукции(Операции_по_готовой_продукции instance);
    partial void UpdateОперации_по_готовой_продукции(Операции_по_готовой_продукции instance);
    partial void DeleteОперации_по_готовой_продукции(Операции_по_готовой_продукции instance);
    partial void InsertОперации_по_складу_ГП(Операции_по_складу_ГП instance);
    partial void UpdateОперации_по_складу_ГП(Операции_по_складу_ГП instance);
    partial void DeleteОперации_по_складу_ГП(Операции_по_складу_ГП instance);
    partial void InsertОперации_по_цеху(Операции_по_цеху instance);
    partial void UpdateОперации_по_цеху(Операции_по_цеху instance);
    partial void DeleteОперации_по_цеху(Операции_по_цеху instance);
    partial void InsertПоставщик_СиМ(Поставщик_СиМ instance);
    partial void UpdateПоставщик_СиМ(Поставщик_СиМ instance);
    partial void DeleteПоставщик_СиМ(Поставщик_СиМ instance);
    partial void InsertСклад_ГП(Склад_ГП instance);
    partial void UpdateСклад_ГП(Склад_ГП instance);
    partial void DeleteСклад_ГП(Склад_ГП instance);
    partial void InsertСклад_СиМ(Склад_СиМ instance);
    partial void UpdateСклад_СиМ(Склад_СиМ instance);
    partial void DeleteСклад_СиМ(Склад_СиМ instance);
    partial void InsertЦех(Цех instance);
    partial void UpdateЦех(Цех instance);
    partial void DeleteЦех(Цех instance);
    partial void InsertОперации_по_складу_СиМ(Операции_по_складу_СиМ instance);
    partial void UpdateОперации_по_складу_СиМ(Операции_по_складу_СиМ instance);
    partial void DeleteОперации_по_складу_СиМ(Операции_по_складу_СиМ instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Storage.Properties.Settings.Default.СкладConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Готовая_продукция> Готовая_продукция
		{
			get
			{
				return this.GetTable<Готовая_продукция>();
			}
		}
		
		public System.Data.Linq.Table<Заказчик_ГП> Заказчик_ГП
		{
			get
			{
				return this.GetTable<Заказчик_ГП>();
			}
		}
		
		public System.Data.Linq.Table<Информация_по_товарам> Информация_по_товарам
		{
			get
			{
				return this.GetTable<Информация_по_товарам>();
			}
		}
		
		public System.Data.Linq.Table<Операции_по_готовой_продукции> Операции_по_готовой_продукции
		{
			get
			{
				return this.GetTable<Операции_по_готовой_продукции>();
			}
		}
		
		public System.Data.Linq.Table<Операции_по_складу_ГП> Операции_по_складу_ГП
		{
			get
			{
				return this.GetTable<Операции_по_складу_ГП>();
			}
		}
		
		public System.Data.Linq.Table<Операции_по_цеху> Операции_по_цеху
		{
			get
			{
				return this.GetTable<Операции_по_цеху>();
			}
		}
		
		public System.Data.Linq.Table<Поставщик_СиМ> Поставщик_СиМ
		{
			get
			{
				return this.GetTable<Поставщик_СиМ>();
			}
		}
		
		public System.Data.Linq.Table<Склад_ГП> Склад_ГП
		{
			get
			{
				return this.GetTable<Склад_ГП>();
			}
		}
		
		public System.Data.Linq.Table<Склад_СиМ> Склад_СиМ
		{
			get
			{
				return this.GetTable<Склад_СиМ>();
			}
		}
		
		public System.Data.Linq.Table<Цех> Цех
		{
			get
			{
				return this.GetTable<Цех>();
			}
		}
		
		public System.Data.Linq.Table<Операции_по_складу_СиМ> Операции_по_складу_СиМ
		{
			get
			{
				return this.GetTable<Операции_по_складу_СиМ>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Готовая продукция]")]
	public partial class Готовая_продукция : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код_товара;
		
		private string _Наименование_товара;
		
		private int _Количество_изготовлений;
		
		private string _Единица_измерения;
		
		private System.Nullable<int> _Код_сырья;
		
		private EntitySet<Операции_по_готовой_продукции> _Операции_по_готовой_продукции;
		
		private EntityRef<Склад_ГП> _Склад_ГП;
		
		private EntityRef<Цех> _Цех;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКод_товараChanging(int value);
    partial void OnКод_товараChanged();
    partial void OnНаименование_товараChanging(string value);
    partial void OnНаименование_товараChanged();
    partial void OnКоличество_изготовленийChanging(int value);
    partial void OnКоличество_изготовленийChanged();
    partial void OnЕдиница_измеренияChanging(string value);
    partial void OnЕдиница_измеренияChanged();
    partial void OnКод_сырьяChanging(System.Nullable<int> value);
    partial void OnКод_сырьяChanged();
    #endregion
		
		public Готовая_продукция()
		{
			this._Операции_по_готовой_продукции = new EntitySet<Операции_по_готовой_продукции>(new Action<Операции_по_готовой_продукции>(this.attach_Операции_по_готовой_продукции), new Action<Операции_по_готовой_продукции>(this.detach_Операции_по_готовой_продукции));
			this._Склад_ГП = default(EntityRef<Склад_ГП>);
			this._Цех = default(EntityRef<Цех>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код товара]", Storage="_Код_товара", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Код_товара
		{
			get
			{
				return this._Код_товара;
			}
			set
			{
				if ((this._Код_товара != value))
				{
					this.OnКод_товараChanging(value);
					this.SendPropertyChanging();
					this._Код_товара = value;
					this.SendPropertyChanged("Код_товара");
					this.OnКод_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Наименование товара]", Storage="_Наименование_товара", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_товара
		{
			get
			{
				return this._Наименование_товара;
			}
			set
			{
				if ((this._Наименование_товара != value))
				{
					this.OnНаименование_товараChanging(value);
					this.SendPropertyChanging();
					this._Наименование_товара = value;
					this.SendPropertyChanged("Наименование_товара");
					this.OnНаименование_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Количество изготовлений]", Storage="_Количество_изготовлений", DbType="Int NOT NULL")]
		public int Количество_изготовлений
		{
			get
			{
				return this._Количество_изготовлений;
			}
			set
			{
				if ((this._Количество_изготовлений != value))
				{
					this.OnКоличество_изготовленийChanging(value);
					this.SendPropertyChanging();
					this._Количество_изготовлений = value;
					this.SendPropertyChanged("Количество_изготовлений");
					this.OnКоличество_изготовленийChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Единица измерения]", Storage="_Единица_измерения", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Единица_измерения
		{
			get
			{
				return this._Единица_измерения;
			}
			set
			{
				if ((this._Единица_измерения != value))
				{
					this.OnЕдиница_измеренияChanging(value);
					this.SendPropertyChanging();
					this._Единица_измерения = value;
					this.SendPropertyChanged("Единица_измерения");
					this.OnЕдиница_измеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код сырья]", Storage="_Код_сырья", DbType="Int")]
		public System.Nullable<int> Код_сырья
		{
			get
			{
				return this._Код_сырья;
			}
			set
			{
				if ((this._Код_сырья != value))
				{
					this.OnКод_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Код_сырья = value;
					this.SendPropertyChanged("Код_сырья");
					this.OnКод_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Готовая_продукция_Операции_по_готовой_продукции", Storage="_Операции_по_готовой_продукции", ThisKey="Код_товара", OtherKey="Код_товара")]
		public EntitySet<Операции_по_готовой_продукции> Операции_по_готовой_продукции
		{
			get
			{
				return this._Операции_по_готовой_продукции;
			}
			set
			{
				this._Операции_по_готовой_продукции.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Готовая_продукция_Склад_ГП", Storage="_Склад_ГП", ThisKey="Код_товара", OtherKey="Код_товара", IsUnique=true, IsForeignKey=false)]
		public Склад_ГП Склад_ГП
		{
			get
			{
				return this._Склад_ГП.Entity;
			}
			set
			{
				Склад_ГП previousValue = this._Склад_ГП.Entity;
				if (((previousValue != value) 
							|| (this._Склад_ГП.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Склад_ГП.Entity = null;
						previousValue.Готовая_продукция = null;
					}
					this._Склад_ГП.Entity = value;
					if ((value != null))
					{
						value.Готовая_продукция = this;
					}
					this.SendPropertyChanged("Склад_ГП");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Цех_Готовая_продукция", Storage="_Цех", ThisKey="Код_сырья", OtherKey="Код_сырья", IsForeignKey=true)]
		public Цех Цех
		{
			get
			{
				return this._Цех.Entity;
			}
			set
			{
				Цех previousValue = this._Цех.Entity;
				if (((previousValue != value) 
							|| (this._Цех.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Цех.Entity = null;
						previousValue.Готовая_продукция.Remove(this);
					}
					this._Цех.Entity = value;
					if ((value != null))
					{
						value.Готовая_продукция.Add(this);
						this._Код_сырья = value.Код_сырья;
					}
					else
					{
						this._Код_сырья = default(Nullable<int>);
					}
					this.SendPropertyChanged("Цех");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Операции_по_готовой_продукции(Операции_по_готовой_продукции entity)
		{
			this.SendPropertyChanging();
			entity.Готовая_продукция = this;
		}
		
		private void detach_Операции_по_готовой_продукции(Операции_по_готовой_продукции entity)
		{
			this.SendPropertyChanging();
			entity.Готовая_продукция = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Заказчик ГП]")]
	public partial class Заказчик_ГП : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Номер_заказа;
		
		private string _Наименование_заказчика;
		
		private string _Наименование_товара;
		
		private int _Количество;
		
		private string _Единица_измерения;
		
		private string _Адрес;
		
		private string _Телефон;
		
		private System.Nullable<bool> _Заказ_закрыт;
		
		private System.Nullable<int> _Код_товара;
		
		private EntityRef<Склад_ГП> _Склад_ГП;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnНомер_заказаChanging(int value);
    partial void OnНомер_заказаChanged();
    partial void OnНаименование_заказчикаChanging(string value);
    partial void OnНаименование_заказчикаChanged();
    partial void OnНаименование_товараChanging(string value);
    partial void OnНаименование_товараChanged();
    partial void OnКоличествоChanging(int value);
    partial void OnКоличествоChanged();
    partial void OnЕдиница_измеренияChanging(string value);
    partial void OnЕдиница_измеренияChanged();
    partial void OnАдресChanging(string value);
    partial void OnАдресChanged();
    partial void OnТелефонChanging(string value);
    partial void OnТелефонChanged();
    partial void OnЗаказ_закрытChanging(System.Nullable<bool> value);
    partial void OnЗаказ_закрытChanged();
    partial void OnКод_товараChanging(System.Nullable<int> value);
    partial void OnКод_товараChanged();
    #endregion
		
		public Заказчик_ГП()
		{
			this._Склад_ГП = default(EntityRef<Склад_ГП>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Номер заказа]", Storage="_Номер_заказа", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Номер_заказа
		{
			get
			{
				return this._Номер_заказа;
			}
			set
			{
				if ((this._Номер_заказа != value))
				{
					this.OnНомер_заказаChanging(value);
					this.SendPropertyChanging();
					this._Номер_заказа = value;
					this.SendPropertyChanged("Номер_заказа");
					this.OnНомер_заказаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Наименование заказчика]", Storage="_Наименование_заказчика", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_заказчика
		{
			get
			{
				return this._Наименование_заказчика;
			}
			set
			{
				if ((this._Наименование_заказчика != value))
				{
					this.OnНаименование_заказчикаChanging(value);
					this.SendPropertyChanging();
					this._Наименование_заказчика = value;
					this.SendPropertyChanged("Наименование_заказчика");
					this.OnНаименование_заказчикаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Наименование товара]", Storage="_Наименование_товара", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_товара
		{
			get
			{
				return this._Наименование_товара;
			}
			set
			{
				if ((this._Наименование_товара != value))
				{
					this.OnНаименование_товараChanging(value);
					this.SendPropertyChanging();
					this._Наименование_товара = value;
					this.SendPropertyChanged("Наименование_товара");
					this.OnНаименование_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Количество", DbType="Int NOT NULL")]
		public int Количество
		{
			get
			{
				return this._Количество;
			}
			set
			{
				if ((this._Количество != value))
				{
					this.OnКоличествоChanging(value);
					this.SendPropertyChanging();
					this._Количество = value;
					this.SendPropertyChanged("Количество");
					this.OnКоличествоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Единица измерения]", Storage="_Единица_измерения", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Единица_измерения
		{
			get
			{
				return this._Единица_измерения;
			}
			set
			{
				if ((this._Единица_измерения != value))
				{
					this.OnЕдиница_измеренияChanging(value);
					this.SendPropertyChanging();
					this._Единица_измерения = value;
					this.SendPropertyChanged("Единица_измерения");
					this.OnЕдиница_измеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Адрес", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Адрес
		{
			get
			{
				return this._Адрес;
			}
			set
			{
				if ((this._Адрес != value))
				{
					this.OnАдресChanging(value);
					this.SendPropertyChanging();
					this._Адрес = value;
					this.SendPropertyChanged("Адрес");
					this.OnАдресChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Телефон", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Телефон
		{
			get
			{
				return this._Телефон;
			}
			set
			{
				if ((this._Телефон != value))
				{
					this.OnТелефонChanging(value);
					this.SendPropertyChanging();
					this._Телефон = value;
					this.SendPropertyChanged("Телефон");
					this.OnТелефонChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Заказ закрыт]", Storage="_Заказ_закрыт", DbType="Bit")]
		public System.Nullable<bool> Заказ_закрыт
		{
			get
			{
				return this._Заказ_закрыт;
			}
			set
			{
				if ((this._Заказ_закрыт != value))
				{
					this.OnЗаказ_закрытChanging(value);
					this.SendPropertyChanging();
					this._Заказ_закрыт = value;
					this.SendPropertyChanged("Заказ_закрыт");
					this.OnЗаказ_закрытChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код товара]", Storage="_Код_товара", DbType="Int")]
		public System.Nullable<int> Код_товара
		{
			get
			{
				return this._Код_товара;
			}
			set
			{
				if ((this._Код_товара != value))
				{
					this.OnКод_товараChanging(value);
					this.SendPropertyChanging();
					this._Код_товара = value;
					this.SendPropertyChanged("Код_товара");
					this.OnКод_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_ГП_Заказчик_ГП", Storage="_Склад_ГП", ThisKey="Код_товара", OtherKey="Код_товара", IsForeignKey=true)]
		public Склад_ГП Склад_ГП
		{
			get
			{
				return this._Склад_ГП.Entity;
			}
			set
			{
				Склад_ГП previousValue = this._Склад_ГП.Entity;
				if (((previousValue != value) 
							|| (this._Склад_ГП.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Склад_ГП.Entity = null;
						previousValue.Заказчик_ГП.Remove(this);
					}
					this._Склад_ГП.Entity = value;
					if ((value != null))
					{
						value.Заказчик_ГП.Add(this);
						this._Код_товара = value.Код_товара;
					}
					else
					{
						this._Код_товара = default(Nullable<int>);
					}
					this.SendPropertyChanged("Склад_ГП");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Информация по товарам]")]
	public partial class Информация_по_товарам : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код_товара;
		
		private int _Код_сырья;
		
		private int _Количество_сырья__необходимое_для_производства_данного_товара;
		
		private string _Единица_измерения;
		
		private EntityRef<Склад_ГП> _Склад_ГП;
		
		private EntityRef<Склад_СиМ> _Склад_СиМ;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКод_товараChanging(int value);
    partial void OnКод_товараChanged();
    partial void OnКод_сырьяChanging(int value);
    partial void OnКод_сырьяChanged();
    partial void OnКоличество_сырья__необходимое_для_производства_данного_товараChanging(int value);
    partial void OnКоличество_сырья__необходимое_для_производства_данного_товараChanged();
    partial void OnЕдиница_измеренияChanging(string value);
    partial void OnЕдиница_измеренияChanged();
    #endregion
		
		public Информация_по_товарам()
		{
			this._Склад_ГП = default(EntityRef<Склад_ГП>);
			this._Склад_СиМ = default(EntityRef<Склад_СиМ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код товара]", Storage="_Код_товара", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Код_товара
		{
			get
			{
				return this._Код_товара;
			}
			set
			{
				if ((this._Код_товара != value))
				{
					this.OnКод_товараChanging(value);
					this.SendPropertyChanging();
					this._Код_товара = value;
					this.SendPropertyChanged("Код_товара");
					this.OnКод_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код сырья]", Storage="_Код_сырья", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Код_сырья
		{
			get
			{
				return this._Код_сырья;
			}
			set
			{
				if ((this._Код_сырья != value))
				{
					this.OnКод_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Код_сырья = value;
					this.SendPropertyChanged("Код_сырья");
					this.OnКод_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Количество сырья, необходимое для производства данного товара]", Storage="_Количество_сырья__необходимое_для_производства_данного_товара", DbType="Int NOT NULL")]
		public int Количество_сырья__необходимое_для_производства_данного_товара
		{
			get
			{
				return this._Количество_сырья__необходимое_для_производства_данного_товара;
			}
			set
			{
				if ((this._Количество_сырья__необходимое_для_производства_данного_товара != value))
				{
					this.OnКоличество_сырья__необходимое_для_производства_данного_товараChanging(value);
					this.SendPropertyChanging();
					this._Количество_сырья__необходимое_для_производства_данного_товара = value;
					this.SendPropertyChanged("Количество_сырья__необходимое_для_производства_данного_товара");
					this.OnКоличество_сырья__необходимое_для_производства_данного_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Единица измерения]", Storage="_Единица_измерения", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Единица_измерения
		{
			get
			{
				return this._Единица_измерения;
			}
			set
			{
				if ((this._Единица_измерения != value))
				{
					this.OnЕдиница_измеренияChanging(value);
					this.SendPropertyChanging();
					this._Единица_измерения = value;
					this.SendPropertyChanged("Единица_измерения");
					this.OnЕдиница_измеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_ГП_Информация_по_товарам", Storage="_Склад_ГП", ThisKey="Код_товара", OtherKey="Код_товара", IsForeignKey=true)]
		public Склад_ГП Склад_ГП
		{
			get
			{
				return this._Склад_ГП.Entity;
			}
			set
			{
				Склад_ГП previousValue = this._Склад_ГП.Entity;
				if (((previousValue != value) 
							|| (this._Склад_ГП.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Склад_ГП.Entity = null;
						previousValue.Информация_по_товарам.Remove(this);
					}
					this._Склад_ГП.Entity = value;
					if ((value != null))
					{
						value.Информация_по_товарам.Add(this);
						this._Код_товара = value.Код_товара;
					}
					else
					{
						this._Код_товара = default(int);
					}
					this.SendPropertyChanged("Склад_ГП");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_СиМ_Информация_по_товарам", Storage="_Склад_СиМ", ThisKey="Код_сырья", OtherKey="Код_сырья", IsForeignKey=true)]
		public Склад_СиМ Склад_СиМ
		{
			get
			{
				return this._Склад_СиМ.Entity;
			}
			set
			{
				Склад_СиМ previousValue = this._Склад_СиМ.Entity;
				if (((previousValue != value) 
							|| (this._Склад_СиМ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Склад_СиМ.Entity = null;
						previousValue.Информация_по_товарам.Remove(this);
					}
					this._Склад_СиМ.Entity = value;
					if ((value != null))
					{
						value.Информация_по_товарам.Add(this);
						this._Код_сырья = value.Код_сырья;
					}
					else
					{
						this._Код_сырья = default(int);
					}
					this.SendPropertyChanged("Склад_СиМ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Операции по готовой продукции]")]
	public partial class Операции_по_готовой_продукции : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Номер_операции;
		
		private int _Код_товара;
		
		private string _Наименование_товара;
		
		private string _Статус;
		
		private System.DateTime _Дата;
		
		private int _Количество;
		
		private string _Единица_измерения;
		
		private EntityRef<Готовая_продукция> _Готовая_продукция;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnНомер_операцииChanging(int value);
    partial void OnНомер_операцииChanged();
    partial void OnКод_товараChanging(int value);
    partial void OnКод_товараChanged();
    partial void OnНаименование_товараChanging(string value);
    partial void OnНаименование_товараChanged();
    partial void OnСтатусChanging(string value);
    partial void OnСтатусChanged();
    partial void OnДатаChanging(System.DateTime value);
    partial void OnДатаChanged();
    partial void OnКоличествоChanging(int value);
    partial void OnКоличествоChanged();
    partial void OnЕдиница_измеренияChanging(string value);
    partial void OnЕдиница_измеренияChanged();
    #endregion
		
		public Операции_по_готовой_продукции()
		{
			this._Готовая_продукция = default(EntityRef<Готовая_продукция>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Номер операции]", Storage="_Номер_операции", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Номер_операции
		{
			get
			{
				return this._Номер_операции;
			}
			set
			{
				if ((this._Номер_операции != value))
				{
					this.OnНомер_операцииChanging(value);
					this.SendPropertyChanging();
					this._Номер_операции = value;
					this.SendPropertyChanged("Номер_операции");
					this.OnНомер_операцииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код товара]", Storage="_Код_товара", DbType="Int NOT NULL")]
		public int Код_товара
		{
			get
			{
				return this._Код_товара;
			}
			set
			{
				if ((this._Код_товара != value))
				{
					this.OnКод_товараChanging(value);
					this.SendPropertyChanging();
					this._Код_товара = value;
					this.SendPropertyChanged("Код_товара");
					this.OnКод_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Наименование товара]", Storage="_Наименование_товара", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_товара
		{
			get
			{
				return this._Наименование_товара;
			}
			set
			{
				if ((this._Наименование_товара != value))
				{
					this.OnНаименование_товараChanging(value);
					this.SendPropertyChanging();
					this._Наименование_товара = value;
					this.SendPropertyChanged("Наименование_товара");
					this.OnНаименование_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Статус", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Статус
		{
			get
			{
				return this._Статус;
			}
			set
			{
				if ((this._Статус != value))
				{
					this.OnСтатусChanging(value);
					this.SendPropertyChanging();
					this._Статус = value;
					this.SendPropertyChanged("Статус");
					this.OnСтатусChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата", DbType="Date NOT NULL")]
		public System.DateTime Дата
		{
			get
			{
				return this._Дата;
			}
			set
			{
				if ((this._Дата != value))
				{
					this.OnДатаChanging(value);
					this.SendPropertyChanging();
					this._Дата = value;
					this.SendPropertyChanged("Дата");
					this.OnДатаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Количество", DbType="Int NOT NULL")]
		public int Количество
		{
			get
			{
				return this._Количество;
			}
			set
			{
				if ((this._Количество != value))
				{
					this.OnКоличествоChanging(value);
					this.SendPropertyChanging();
					this._Количество = value;
					this.SendPropertyChanged("Количество");
					this.OnКоличествоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Единица измерения]", Storage="_Единица_измерения", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Единица_измерения
		{
			get
			{
				return this._Единица_измерения;
			}
			set
			{
				if ((this._Единица_измерения != value))
				{
					this.OnЕдиница_измеренияChanging(value);
					this.SendPropertyChanging();
					this._Единица_измерения = value;
					this.SendPropertyChanged("Единица_измерения");
					this.OnЕдиница_измеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Готовая_продукция_Операции_по_готовой_продукции", Storage="_Готовая_продукция", ThisKey="Код_товара", OtherKey="Код_товара", IsForeignKey=true)]
		public Готовая_продукция Готовая_продукция
		{
			get
			{
				return this._Готовая_продукция.Entity;
			}
			set
			{
				Готовая_продукция previousValue = this._Готовая_продукция.Entity;
				if (((previousValue != value) 
							|| (this._Готовая_продукция.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Готовая_продукция.Entity = null;
						previousValue.Операции_по_готовой_продукции.Remove(this);
					}
					this._Готовая_продукция.Entity = value;
					if ((value != null))
					{
						value.Операции_по_готовой_продукции.Add(this);
						this._Код_товара = value.Код_товара;
					}
					else
					{
						this._Код_товара = default(int);
					}
					this.SendPropertyChanged("Готовая_продукция");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Операции по складу ГП]")]
	public partial class Операции_по_складу_ГП : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Номер_операции;
		
		private int _Код_товара;
		
		private string _Наименование_товара;
		
		private string _Статус;
		
		private System.DateTime _Дата;
		
		private int _Количество;
		
		private string _Единица_измерения;
		
		private EntityRef<Склад_ГП> _Склад_ГП;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnНомер_операцииChanging(int value);
    partial void OnНомер_операцииChanged();
    partial void OnКод_товараChanging(int value);
    partial void OnКод_товараChanged();
    partial void OnНаименование_товараChanging(string value);
    partial void OnНаименование_товараChanged();
    partial void OnСтатусChanging(string value);
    partial void OnСтатусChanged();
    partial void OnДатаChanging(System.DateTime value);
    partial void OnДатаChanged();
    partial void OnКоличествоChanging(int value);
    partial void OnКоличествоChanged();
    partial void OnЕдиница_измеренияChanging(string value);
    partial void OnЕдиница_измеренияChanged();
    #endregion
		
		public Операции_по_складу_ГП()
		{
			this._Склад_ГП = default(EntityRef<Склад_ГП>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Номер операции]", Storage="_Номер_операции", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Номер_операции
		{
			get
			{
				return this._Номер_операции;
			}
			set
			{
				if ((this._Номер_операции != value))
				{
					this.OnНомер_операцииChanging(value);
					this.SendPropertyChanging();
					this._Номер_операции = value;
					this.SendPropertyChanged("Номер_операции");
					this.OnНомер_операцииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код товара]", Storage="_Код_товара", DbType="Int NOT NULL")]
		public int Код_товара
		{
			get
			{
				return this._Код_товара;
			}
			set
			{
				if ((this._Код_товара != value))
				{
					this.OnКод_товараChanging(value);
					this.SendPropertyChanging();
					this._Код_товара = value;
					this.SendPropertyChanged("Код_товара");
					this.OnКод_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Наименование товара]", Storage="_Наименование_товара", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_товара
		{
			get
			{
				return this._Наименование_товара;
			}
			set
			{
				if ((this._Наименование_товара != value))
				{
					this.OnНаименование_товараChanging(value);
					this.SendPropertyChanging();
					this._Наименование_товара = value;
					this.SendPropertyChanged("Наименование_товара");
					this.OnНаименование_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Статус", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Статус
		{
			get
			{
				return this._Статус;
			}
			set
			{
				if ((this._Статус != value))
				{
					this.OnСтатусChanging(value);
					this.SendPropertyChanging();
					this._Статус = value;
					this.SendPropertyChanged("Статус");
					this.OnСтатусChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата", DbType="Date NOT NULL")]
		public System.DateTime Дата
		{
			get
			{
				return this._Дата;
			}
			set
			{
				if ((this._Дата != value))
				{
					this.OnДатаChanging(value);
					this.SendPropertyChanging();
					this._Дата = value;
					this.SendPropertyChanged("Дата");
					this.OnДатаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Количество", DbType="Int NOT NULL")]
		public int Количество
		{
			get
			{
				return this._Количество;
			}
			set
			{
				if ((this._Количество != value))
				{
					this.OnКоличествоChanging(value);
					this.SendPropertyChanging();
					this._Количество = value;
					this.SendPropertyChanged("Количество");
					this.OnКоличествоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Единица измерения]", Storage="_Единица_измерения", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Единица_измерения
		{
			get
			{
				return this._Единица_измерения;
			}
			set
			{
				if ((this._Единица_измерения != value))
				{
					this.OnЕдиница_измеренияChanging(value);
					this.SendPropertyChanging();
					this._Единица_измерения = value;
					this.SendPropertyChanged("Единица_измерения");
					this.OnЕдиница_измеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_ГП_Операции_по_складу_ГП", Storage="_Склад_ГП", ThisKey="Код_товара", OtherKey="Код_товара", IsForeignKey=true)]
		public Склад_ГП Склад_ГП
		{
			get
			{
				return this._Склад_ГП.Entity;
			}
			set
			{
				Склад_ГП previousValue = this._Склад_ГП.Entity;
				if (((previousValue != value) 
							|| (this._Склад_ГП.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Склад_ГП.Entity = null;
						previousValue.Операции_по_складу_ГП.Remove(this);
					}
					this._Склад_ГП.Entity = value;
					if ((value != null))
					{
						value.Операции_по_складу_ГП.Add(this);
						this._Код_товара = value.Код_товара;
					}
					else
					{
						this._Код_товара = default(int);
					}
					this.SendPropertyChanged("Склад_ГП");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Операции по цеху]")]
	public partial class Операции_по_цеху : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Номер_операции;
		
		private int _Код_сырья;
		
		private string _Наименование_сырья;
		
		private string _Статус;
		
		private System.DateTime _Дата;
		
		private int _Количество;
		
		private string _Единица_измерения;
		
		private EntityRef<Цех> _Цех;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnНомер_операцииChanging(int value);
    partial void OnНомер_операцииChanged();
    partial void OnКод_сырьяChanging(int value);
    partial void OnКод_сырьяChanged();
    partial void OnНаименование_сырьяChanging(string value);
    partial void OnНаименование_сырьяChanged();
    partial void OnСтатусChanging(string value);
    partial void OnСтатусChanged();
    partial void OnДатаChanging(System.DateTime value);
    partial void OnДатаChanged();
    partial void OnКоличествоChanging(int value);
    partial void OnКоличествоChanged();
    partial void OnЕдиница_измеренияChanging(string value);
    partial void OnЕдиница_измеренияChanged();
    #endregion
		
		public Операции_по_цеху()
		{
			this._Цех = default(EntityRef<Цех>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Номер операции]", Storage="_Номер_операции", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Номер_операции
		{
			get
			{
				return this._Номер_операции;
			}
			set
			{
				if ((this._Номер_операции != value))
				{
					this.OnНомер_операцииChanging(value);
					this.SendPropertyChanging();
					this._Номер_операции = value;
					this.SendPropertyChanged("Номер_операции");
					this.OnНомер_операцииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код сырья]", Storage="_Код_сырья", DbType="Int NOT NULL")]
		public int Код_сырья
		{
			get
			{
				return this._Код_сырья;
			}
			set
			{
				if ((this._Код_сырья != value))
				{
					this.OnКод_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Код_сырья = value;
					this.SendPropertyChanged("Код_сырья");
					this.OnКод_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Наименование сырья]", Storage="_Наименование_сырья", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_сырья
		{
			get
			{
				return this._Наименование_сырья;
			}
			set
			{
				if ((this._Наименование_сырья != value))
				{
					this.OnНаименование_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Наименование_сырья = value;
					this.SendPropertyChanged("Наименование_сырья");
					this.OnНаименование_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Статус", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Статус
		{
			get
			{
				return this._Статус;
			}
			set
			{
				if ((this._Статус != value))
				{
					this.OnСтатусChanging(value);
					this.SendPropertyChanging();
					this._Статус = value;
					this.SendPropertyChanged("Статус");
					this.OnСтатусChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата", DbType="Date NOT NULL")]
		public System.DateTime Дата
		{
			get
			{
				return this._Дата;
			}
			set
			{
				if ((this._Дата != value))
				{
					this.OnДатаChanging(value);
					this.SendPropertyChanging();
					this._Дата = value;
					this.SendPropertyChanged("Дата");
					this.OnДатаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Количество", DbType="Int NOT NULL")]
		public int Количество
		{
			get
			{
				return this._Количество;
			}
			set
			{
				if ((this._Количество != value))
				{
					this.OnКоличествоChanging(value);
					this.SendPropertyChanging();
					this._Количество = value;
					this.SendPropertyChanged("Количество");
					this.OnКоличествоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Единица измерения]", Storage="_Единица_измерения", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Единица_измерения
		{
			get
			{
				return this._Единица_измерения;
			}
			set
			{
				if ((this._Единица_измерения != value))
				{
					this.OnЕдиница_измеренияChanging(value);
					this.SendPropertyChanging();
					this._Единица_измерения = value;
					this.SendPropertyChanged("Единица_измерения");
					this.OnЕдиница_измеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Цех_Операции_по_цеху", Storage="_Цех", ThisKey="Код_сырья", OtherKey="Код_сырья", IsForeignKey=true)]
		public Цех Цех
		{
			get
			{
				return this._Цех.Entity;
			}
			set
			{
				Цех previousValue = this._Цех.Entity;
				if (((previousValue != value) 
							|| (this._Цех.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Цех.Entity = null;
						previousValue.Операции_по_цеху.Remove(this);
					}
					this._Цех.Entity = value;
					if ((value != null))
					{
						value.Операции_по_цеху.Add(this);
						this._Код_сырья = value.Код_сырья;
					}
					else
					{
						this._Код_сырья = default(int);
					}
					this.SendPropertyChanged("Цех");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Поставщик СиМ]")]
	public partial class Поставщик_СиМ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код_поставщика;
		
		private string _Наименование_организации;
		
		private int _Код_сырья;
		
		private string _Наименование_сырья;
		
		private decimal _Стоимость;
		
		private string _Единица_измерения;
		
		private string _Адрес_организации;
		
		private string _Телефон;
		
		private EntityRef<Склад_СиМ> _Склад_СиМ;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКод_поставщикаChanging(int value);
    partial void OnКод_поставщикаChanged();
    partial void OnНаименование_организацииChanging(string value);
    partial void OnНаименование_организацииChanged();
    partial void OnКод_сырьяChanging(int value);
    partial void OnКод_сырьяChanged();
    partial void OnНаименование_сырьяChanging(string value);
    partial void OnНаименование_сырьяChanged();
    partial void OnСтоимостьChanging(decimal value);
    partial void OnСтоимостьChanged();
    partial void OnЕдиница_измеренияChanging(string value);
    partial void OnЕдиница_измеренияChanged();
    partial void OnАдрес_организацииChanging(string value);
    partial void OnАдрес_организацииChanged();
    partial void OnТелефонChanging(string value);
    partial void OnТелефонChanged();
    #endregion
		
		public Поставщик_СиМ()
		{
			this._Склад_СиМ = default(EntityRef<Склад_СиМ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код_поставщика", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Код_поставщика
		{
			get
			{
				return this._Код_поставщика;
			}
			set
			{
				if ((this._Код_поставщика != value))
				{
					this.OnКод_поставщикаChanging(value);
					this.SendPropertyChanging();
					this._Код_поставщика = value;
					this.SendPropertyChanged("Код_поставщика");
					this.OnКод_поставщикаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Наименование_организации", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_организации
		{
			get
			{
				return this._Наименование_организации;
			}
			set
			{
				if ((this._Наименование_организации != value))
				{
					this.OnНаименование_организацииChanging(value);
					this.SendPropertyChanging();
					this._Наименование_организации = value;
					this.SendPropertyChanged("Наименование_организации");
					this.OnНаименование_организацииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код_сырья", DbType="Int NOT NULL")]
		public int Код_сырья
		{
			get
			{
				return this._Код_сырья;
			}
			set
			{
				if ((this._Код_сырья != value))
				{
					if (this._Склад_СиМ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnКод_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Код_сырья = value;
					this.SendPropertyChanged("Код_сырья");
					this.OnКод_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Наименование_сырья", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_сырья
		{
			get
			{
				return this._Наименование_сырья;
			}
			set
			{
				if ((this._Наименование_сырья != value))
				{
					this.OnНаименование_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Наименование_сырья = value;
					this.SendPropertyChanged("Наименование_сырья");
					this.OnНаименование_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Стоимость", DbType="Money NOT NULL")]
		public decimal Стоимость
		{
			get
			{
				return this._Стоимость;
			}
			set
			{
				if ((this._Стоимость != value))
				{
					this.OnСтоимостьChanging(value);
					this.SendPropertyChanging();
					this._Стоимость = value;
					this.SendPropertyChanged("Стоимость");
					this.OnСтоимостьChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Единица_измерения", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Единица_измерения
		{
			get
			{
				return this._Единица_измерения;
			}
			set
			{
				if ((this._Единица_измерения != value))
				{
					this.OnЕдиница_измеренияChanging(value);
					this.SendPropertyChanging();
					this._Единица_измерения = value;
					this.SendPropertyChanged("Единица_измерения");
					this.OnЕдиница_измеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Адрес_организации", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Адрес_организации
		{
			get
			{
				return this._Адрес_организации;
			}
			set
			{
				if ((this._Адрес_организации != value))
				{
					this.OnАдрес_организацииChanging(value);
					this.SendPropertyChanging();
					this._Адрес_организации = value;
					this.SendPropertyChanged("Адрес_организации");
					this.OnАдрес_организацииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Телефон", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Телефон
		{
			get
			{
				return this._Телефон;
			}
			set
			{
				if ((this._Телефон != value))
				{
					this.OnТелефонChanging(value);
					this.SendPropertyChanging();
					this._Телефон = value;
					this.SendPropertyChanged("Телефон");
					this.OnТелефонChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_СиМ_Поставщик_СиМ", Storage="_Склад_СиМ", ThisKey="Код_сырья", OtherKey="Код_сырья", IsForeignKey=true)]
		public Склад_СиМ Склад_СиМ
		{
			get
			{
				return this._Склад_СиМ.Entity;
			}
			set
			{
				Склад_СиМ previousValue = this._Склад_СиМ.Entity;
				if (((previousValue != value) 
							|| (this._Склад_СиМ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Склад_СиМ.Entity = null;
						previousValue.Поставщик_СиМ.Remove(this);
					}
					this._Склад_СиМ.Entity = value;
					if ((value != null))
					{
						value.Поставщик_СиМ.Add(this);
						this._Код_сырья = value.Код_сырья;
					}
					else
					{
						this._Код_сырья = default(int);
					}
					this.SendPropertyChanged("Склад_СиМ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Склад ГП]")]
	public partial class Склад_ГП : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код_товара;
		
		private string _Наименование_товара;
		
		private int _Количество_на_складе;
		
		private string _Единица_измерения;
		
		private EntitySet<Заказчик_ГП> _Заказчик_ГП;
		
		private EntitySet<Информация_по_товарам> _Информация_по_товарам;
		
		private EntitySet<Операции_по_складу_ГП> _Операции_по_складу_ГП;
		
		private EntityRef<Готовая_продукция> _Готовая_продукция;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКод_товараChanging(int value);
    partial void OnКод_товараChanged();
    partial void OnНаименование_товараChanging(string value);
    partial void OnНаименование_товараChanged();
    partial void OnКоличество_на_складеChanging(int value);
    partial void OnКоличество_на_складеChanged();
    partial void OnЕдиница_измеренияChanging(string value);
    partial void OnЕдиница_измеренияChanged();
    #endregion
		
		public Склад_ГП()
		{
			this._Заказчик_ГП = new EntitySet<Заказчик_ГП>(new Action<Заказчик_ГП>(this.attach_Заказчик_ГП), new Action<Заказчик_ГП>(this.detach_Заказчик_ГП));
			this._Информация_по_товарам = new EntitySet<Информация_по_товарам>(new Action<Информация_по_товарам>(this.attach_Информация_по_товарам), new Action<Информация_по_товарам>(this.detach_Информация_по_товарам));
			this._Операции_по_складу_ГП = new EntitySet<Операции_по_складу_ГП>(new Action<Операции_по_складу_ГП>(this.attach_Операции_по_складу_ГП), new Action<Операции_по_складу_ГП>(this.detach_Операции_по_складу_ГП));
			this._Готовая_продукция = default(EntityRef<Готовая_продукция>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код товара]", Storage="_Код_товара", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Код_товара
		{
			get
			{
				return this._Код_товара;
			}
			set
			{
				if ((this._Код_товара != value))
				{
					this.OnКод_товараChanging(value);
					this.SendPropertyChanging();
					this._Код_товара = value;
					this.SendPropertyChanged("Код_товара");
					this.OnКод_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Наименование товара]", Storage="_Наименование_товара", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_товара
		{
			get
			{
				return this._Наименование_товара;
			}
			set
			{
				if ((this._Наименование_товара != value))
				{
					this.OnНаименование_товараChanging(value);
					this.SendPropertyChanging();
					this._Наименование_товара = value;
					this.SendPropertyChanged("Наименование_товара");
					this.OnНаименование_товараChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Количество на складе]", Storage="_Количество_на_складе", DbType="Int NOT NULL")]
		public int Количество_на_складе
		{
			get
			{
				return this._Количество_на_складе;
			}
			set
			{
				if ((this._Количество_на_складе != value))
				{
					this.OnКоличество_на_складеChanging(value);
					this.SendPropertyChanging();
					this._Количество_на_складе = value;
					this.SendPropertyChanged("Количество_на_складе");
					this.OnКоличество_на_складеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Единица измерения]", Storage="_Единица_измерения", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Единица_измерения
		{
			get
			{
				return this._Единица_измерения;
			}
			set
			{
				if ((this._Единица_измерения != value))
				{
					this.OnЕдиница_измеренияChanging(value);
					this.SendPropertyChanging();
					this._Единица_измерения = value;
					this.SendPropertyChanged("Единица_измерения");
					this.OnЕдиница_измеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_ГП_Заказчик_ГП", Storage="_Заказчик_ГП", ThisKey="Код_товара", OtherKey="Код_товара")]
		public EntitySet<Заказчик_ГП> Заказчик_ГП
		{
			get
			{
				return this._Заказчик_ГП;
			}
			set
			{
				this._Заказчик_ГП.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_ГП_Информация_по_товарам", Storage="_Информация_по_товарам", ThisKey="Код_товара", OtherKey="Код_товара")]
		public EntitySet<Информация_по_товарам> Информация_по_товарам
		{
			get
			{
				return this._Информация_по_товарам;
			}
			set
			{
				this._Информация_по_товарам.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_ГП_Операции_по_складу_ГП", Storage="_Операции_по_складу_ГП", ThisKey="Код_товара", OtherKey="Код_товара")]
		public EntitySet<Операции_по_складу_ГП> Операции_по_складу_ГП
		{
			get
			{
				return this._Операции_по_складу_ГП;
			}
			set
			{
				this._Операции_по_складу_ГП.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Готовая_продукция_Склад_ГП", Storage="_Готовая_продукция", ThisKey="Код_товара", OtherKey="Код_товара", IsForeignKey=true)]
		public Готовая_продукция Готовая_продукция
		{
			get
			{
				return this._Готовая_продукция.Entity;
			}
			set
			{
				Готовая_продукция previousValue = this._Готовая_продукция.Entity;
				if (((previousValue != value) 
							|| (this._Готовая_продукция.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Готовая_продукция.Entity = null;
						previousValue.Склад_ГП = null;
					}
					this._Готовая_продукция.Entity = value;
					if ((value != null))
					{
						value.Склад_ГП = this;
						this._Код_товара = value.Код_товара;
					}
					else
					{
						this._Код_товара = default(int);
					}
					this.SendPropertyChanged("Готовая_продукция");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Заказчик_ГП(Заказчик_ГП entity)
		{
			this.SendPropertyChanging();
			entity.Склад_ГП = this;
		}
		
		private void detach_Заказчик_ГП(Заказчик_ГП entity)
		{
			this.SendPropertyChanging();
			entity.Склад_ГП = null;
		}
		
		private void attach_Информация_по_товарам(Информация_по_товарам entity)
		{
			this.SendPropertyChanging();
			entity.Склад_ГП = this;
		}
		
		private void detach_Информация_по_товарам(Информация_по_товарам entity)
		{
			this.SendPropertyChanging();
			entity.Склад_ГП = null;
		}
		
		private void attach_Операции_по_складу_ГП(Операции_по_складу_ГП entity)
		{
			this.SendPropertyChanging();
			entity.Склад_ГП = this;
		}
		
		private void detach_Операции_по_складу_ГП(Операции_по_складу_ГП entity)
		{
			this.SendPropertyChanging();
			entity.Склад_ГП = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Склад СиМ]")]
	public partial class Склад_СиМ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код_сырья;
		
		private string _Наименование_сырья;
		
		private int _Количество_на_складе;
		
		private string _Единица_измерения;
		
		private EntitySet<Информация_по_товарам> _Информация_по_товарам;
		
		private EntitySet<Поставщик_СиМ> _Поставщик_СиМ;
		
		private EntityRef<Цех> _Цех;
		
		private EntitySet<Операции_по_складу_СиМ> _Операции_по_складу_СиМ;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКод_сырьяChanging(int value);
    partial void OnКод_сырьяChanged();
    partial void OnНаименование_сырьяChanging(string value);
    partial void OnНаименование_сырьяChanged();
    partial void OnКоличество_на_складеChanging(int value);
    partial void OnКоличество_на_складеChanged();
    partial void OnЕдиница_измеренияChanging(string value);
    partial void OnЕдиница_измеренияChanged();
    #endregion
		
		public Склад_СиМ()
		{
			this._Информация_по_товарам = new EntitySet<Информация_по_товарам>(new Action<Информация_по_товарам>(this.attach_Информация_по_товарам), new Action<Информация_по_товарам>(this.detach_Информация_по_товарам));
			this._Поставщик_СиМ = new EntitySet<Поставщик_СиМ>(new Action<Поставщик_СиМ>(this.attach_Поставщик_СиМ), new Action<Поставщик_СиМ>(this.detach_Поставщик_СиМ));
			this._Цех = default(EntityRef<Цех>);
			this._Операции_по_складу_СиМ = new EntitySet<Операции_по_складу_СиМ>(new Action<Операции_по_складу_СиМ>(this.attach_Операции_по_складу_СиМ), new Action<Операции_по_складу_СиМ>(this.detach_Операции_по_складу_СиМ));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код сырья]", Storage="_Код_сырья", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Код_сырья
		{
			get
			{
				return this._Код_сырья;
			}
			set
			{
				if ((this._Код_сырья != value))
				{
					this.OnКод_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Код_сырья = value;
					this.SendPropertyChanged("Код_сырья");
					this.OnКод_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Наименование сырья]", Storage="_Наименование_сырья", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_сырья
		{
			get
			{
				return this._Наименование_сырья;
			}
			set
			{
				if ((this._Наименование_сырья != value))
				{
					this.OnНаименование_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Наименование_сырья = value;
					this.SendPropertyChanged("Наименование_сырья");
					this.OnНаименование_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Количество на складе]", Storage="_Количество_на_складе", DbType="Int NOT NULL")]
		public int Количество_на_складе
		{
			get
			{
				return this._Количество_на_складе;
			}
			set
			{
				if ((this._Количество_на_складе != value))
				{
					this.OnКоличество_на_складеChanging(value);
					this.SendPropertyChanging();
					this._Количество_на_складе = value;
					this.SendPropertyChanged("Количество_на_складе");
					this.OnКоличество_на_складеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Единица измерения]", Storage="_Единица_измерения", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Единица_измерения
		{
			get
			{
				return this._Единица_измерения;
			}
			set
			{
				if ((this._Единица_измерения != value))
				{
					this.OnЕдиница_измеренияChanging(value);
					this.SendPropertyChanging();
					this._Единица_измерения = value;
					this.SendPropertyChanged("Единица_измерения");
					this.OnЕдиница_измеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_СиМ_Информация_по_товарам", Storage="_Информация_по_товарам", ThisKey="Код_сырья", OtherKey="Код_сырья")]
		public EntitySet<Информация_по_товарам> Информация_по_товарам
		{
			get
			{
				return this._Информация_по_товарам;
			}
			set
			{
				this._Информация_по_товарам.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_СиМ_Поставщик_СиМ", Storage="_Поставщик_СиМ", ThisKey="Код_сырья", OtherKey="Код_сырья")]
		public EntitySet<Поставщик_СиМ> Поставщик_СиМ
		{
			get
			{
				return this._Поставщик_СиМ;
			}
			set
			{
				this._Поставщик_СиМ.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_СиМ_Цех", Storage="_Цех", ThisKey="Код_сырья", OtherKey="Код_сырья", IsUnique=true, IsForeignKey=false)]
		public Цех Цех
		{
			get
			{
				return this._Цех.Entity;
			}
			set
			{
				Цех previousValue = this._Цех.Entity;
				if (((previousValue != value) 
							|| (this._Цех.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Цех.Entity = null;
						previousValue.Склад_СиМ = null;
					}
					this._Цех.Entity = value;
					if ((value != null))
					{
						value.Склад_СиМ = this;
					}
					this.SendPropertyChanged("Цех");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_СиМ_Операции_по_складу_СиМ", Storage="_Операции_по_складу_СиМ", ThisKey="Код_сырья", OtherKey="Код_сырья")]
		public EntitySet<Операции_по_складу_СиМ> Операции_по_складу_СиМ
		{
			get
			{
				return this._Операции_по_складу_СиМ;
			}
			set
			{
				this._Операции_по_складу_СиМ.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Информация_по_товарам(Информация_по_товарам entity)
		{
			this.SendPropertyChanging();
			entity.Склад_СиМ = this;
		}
		
		private void detach_Информация_по_товарам(Информация_по_товарам entity)
		{
			this.SendPropertyChanging();
			entity.Склад_СиМ = null;
		}
		
		private void attach_Поставщик_СиМ(Поставщик_СиМ entity)
		{
			this.SendPropertyChanging();
			entity.Склад_СиМ = this;
		}
		
		private void detach_Поставщик_СиМ(Поставщик_СиМ entity)
		{
			this.SendPropertyChanging();
			entity.Склад_СиМ = null;
		}
		
		private void attach_Операции_по_складу_СиМ(Операции_по_складу_СиМ entity)
		{
			this.SendPropertyChanging();
			entity.Склад_СиМ = this;
		}
		
		private void detach_Операции_по_складу_СиМ(Операции_по_складу_СиМ entity)
		{
			this.SendPropertyChanging();
			entity.Склад_СиМ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Цех")]
	public partial class Цех : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код_сырья;
		
		private string _Наименование_сырья;
		
		private int _Количество_поступлений;
		
		private string _Единица_измерения;
		
		private EntitySet<Готовая_продукция> _Готовая_продукция;
		
		private EntitySet<Операции_по_цеху> _Операции_по_цеху;
		
		private EntityRef<Склад_СиМ> _Склад_СиМ;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКод_сырьяChanging(int value);
    partial void OnКод_сырьяChanged();
    partial void OnНаименование_сырьяChanging(string value);
    partial void OnНаименование_сырьяChanged();
    partial void OnКоличество_поступленийChanging(int value);
    partial void OnКоличество_поступленийChanged();
    partial void OnЕдиница_измеренияChanging(string value);
    partial void OnЕдиница_измеренияChanged();
    #endregion
		
		public Цех()
		{
			this._Готовая_продукция = new EntitySet<Готовая_продукция>(new Action<Готовая_продукция>(this.attach_Готовая_продукция), new Action<Готовая_продукция>(this.detach_Готовая_продукция));
			this._Операции_по_цеху = new EntitySet<Операции_по_цеху>(new Action<Операции_по_цеху>(this.attach_Операции_по_цеху), new Action<Операции_по_цеху>(this.detach_Операции_по_цеху));
			this._Склад_СиМ = default(EntityRef<Склад_СиМ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код сырья]", Storage="_Код_сырья", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Код_сырья
		{
			get
			{
				return this._Код_сырья;
			}
			set
			{
				if ((this._Код_сырья != value))
				{
					this.OnКод_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Код_сырья = value;
					this.SendPropertyChanged("Код_сырья");
					this.OnКод_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Наименование сырья]", Storage="_Наименование_сырья", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_сырья
		{
			get
			{
				return this._Наименование_сырья;
			}
			set
			{
				if ((this._Наименование_сырья != value))
				{
					this.OnНаименование_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Наименование_сырья = value;
					this.SendPropertyChanged("Наименование_сырья");
					this.OnНаименование_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Количество поступлений]", Storage="_Количество_поступлений", DbType="Int NOT NULL")]
		public int Количество_поступлений
		{
			get
			{
				return this._Количество_поступлений;
			}
			set
			{
				if ((this._Количество_поступлений != value))
				{
					this.OnКоличество_поступленийChanging(value);
					this.SendPropertyChanging();
					this._Количество_поступлений = value;
					this.SendPropertyChanged("Количество_поступлений");
					this.OnКоличество_поступленийChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Единица измерения]", Storage="_Единица_измерения", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Единица_измерения
		{
			get
			{
				return this._Единица_измерения;
			}
			set
			{
				if ((this._Единица_измерения != value))
				{
					this.OnЕдиница_измеренияChanging(value);
					this.SendPropertyChanging();
					this._Единица_измерения = value;
					this.SendPropertyChanged("Единица_измерения");
					this.OnЕдиница_измеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Цех_Готовая_продукция", Storage="_Готовая_продукция", ThisKey="Код_сырья", OtherKey="Код_сырья")]
		public EntitySet<Готовая_продукция> Готовая_продукция
		{
			get
			{
				return this._Готовая_продукция;
			}
			set
			{
				this._Готовая_продукция.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Цех_Операции_по_цеху", Storage="_Операции_по_цеху", ThisKey="Код_сырья", OtherKey="Код_сырья")]
		public EntitySet<Операции_по_цеху> Операции_по_цеху
		{
			get
			{
				return this._Операции_по_цеху;
			}
			set
			{
				this._Операции_по_цеху.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_СиМ_Цех", Storage="_Склад_СиМ", ThisKey="Код_сырья", OtherKey="Код_сырья", IsForeignKey=true)]
		public Склад_СиМ Склад_СиМ
		{
			get
			{
				return this._Склад_СиМ.Entity;
			}
			set
			{
				Склад_СиМ previousValue = this._Склад_СиМ.Entity;
				if (((previousValue != value) 
							|| (this._Склад_СиМ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Склад_СиМ.Entity = null;
						previousValue.Цех = null;
					}
					this._Склад_СиМ.Entity = value;
					if ((value != null))
					{
						value.Цех = this;
						this._Код_сырья = value.Код_сырья;
					}
					else
					{
						this._Код_сырья = default(int);
					}
					this.SendPropertyChanged("Склад_СиМ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Готовая_продукция(Готовая_продукция entity)
		{
			this.SendPropertyChanging();
			entity.Цех = this;
		}
		
		private void detach_Готовая_продукция(Готовая_продукция entity)
		{
			this.SendPropertyChanging();
			entity.Цех = null;
		}
		
		private void attach_Операции_по_цеху(Операции_по_цеху entity)
		{
			this.SendPropertyChanging();
			entity.Цех = this;
		}
		
		private void detach_Операции_по_цеху(Операции_по_цеху entity)
		{
			this.SendPropertyChanging();
			entity.Цех = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Операции по складу СиМ]")]
	public partial class Операции_по_складу_СиМ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Номер_операции;
		
		private int _Код_сырья;
		
		private string _Наименование_сырья;
		
		private string _Статус;
		
		private System.DateTime _Дата;
		
		private int _Количество;
		
		private string _Единица_измерения;
		
		private EntityRef<Склад_СиМ> _Склад_СиМ;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnНомер_операцииChanging(int value);
    partial void OnНомер_операцииChanged();
    partial void OnКод_сырьяChanging(int value);
    partial void OnКод_сырьяChanged();
    partial void OnНаименование_сырьяChanging(string value);
    partial void OnНаименование_сырьяChanged();
    partial void OnСтатусChanging(string value);
    partial void OnСтатусChanged();
    partial void OnДатаChanging(System.DateTime value);
    partial void OnДатаChanged();
    partial void OnКоличествоChanging(int value);
    partial void OnКоличествоChanged();
    partial void OnЕдиница_измеренияChanging(string value);
    partial void OnЕдиница_измеренияChanged();
    #endregion
		
		public Операции_по_складу_СиМ()
		{
			this._Склад_СиМ = default(EntityRef<Склад_СиМ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер_операции", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Номер_операции
		{
			get
			{
				return this._Номер_операции;
			}
			set
			{
				if ((this._Номер_операции != value))
				{
					this.OnНомер_операцииChanging(value);
					this.SendPropertyChanging();
					this._Номер_операции = value;
					this.SendPropertyChanged("Номер_операции");
					this.OnНомер_операцииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код_сырья", DbType="Int NOT NULL")]
		public int Код_сырья
		{
			get
			{
				return this._Код_сырья;
			}
			set
			{
				if ((this._Код_сырья != value))
				{
					if (this._Склад_СиМ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnКод_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Код_сырья = value;
					this.SendPropertyChanged("Код_сырья");
					this.OnКод_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Наименование_сырья", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Наименование_сырья
		{
			get
			{
				return this._Наименование_сырья;
			}
			set
			{
				if ((this._Наименование_сырья != value))
				{
					this.OnНаименование_сырьяChanging(value);
					this.SendPropertyChanging();
					this._Наименование_сырья = value;
					this.SendPropertyChanged("Наименование_сырья");
					this.OnНаименование_сырьяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Статус", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Статус
		{
			get
			{
				return this._Статус;
			}
			set
			{
				if ((this._Статус != value))
				{
					this.OnСтатусChanging(value);
					this.SendPropertyChanging();
					this._Статус = value;
					this.SendPropertyChanged("Статус");
					this.OnСтатусChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата", DbType="Date NOT NULL")]
		public System.DateTime Дата
		{
			get
			{
				return this._Дата;
			}
			set
			{
				if ((this._Дата != value))
				{
					this.OnДатаChanging(value);
					this.SendPropertyChanging();
					this._Дата = value;
					this.SendPropertyChanged("Дата");
					this.OnДатаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Количество", DbType="Int NOT NULL")]
		public int Количество
		{
			get
			{
				return this._Количество;
			}
			set
			{
				if ((this._Количество != value))
				{
					this.OnКоличествоChanging(value);
					this.SendPropertyChanging();
					this._Количество = value;
					this.SendPropertyChanged("Количество");
					this.OnКоличествоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Единица_измерения", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Единица_измерения
		{
			get
			{
				return this._Единица_измерения;
			}
			set
			{
				if ((this._Единица_измерения != value))
				{
					this.OnЕдиница_измеренияChanging(value);
					this.SendPropertyChanging();
					this._Единица_измерения = value;
					this.SendPropertyChanged("Единица_измерения");
					this.OnЕдиница_измеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Склад_СиМ_Операции_по_складу_СиМ", Storage="_Склад_СиМ", ThisKey="Код_сырья", OtherKey="Код_сырья", IsForeignKey=true)]
		public Склад_СиМ Склад_СиМ
		{
			get
			{
				return this._Склад_СиМ.Entity;
			}
			set
			{
				Склад_СиМ previousValue = this._Склад_СиМ.Entity;
				if (((previousValue != value) 
							|| (this._Склад_СиМ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Склад_СиМ.Entity = null;
						previousValue.Операции_по_складу_СиМ.Remove(this);
					}
					this._Склад_СиМ.Entity = value;
					if ((value != null))
					{
						value.Операции_по_складу_СиМ.Add(this);
						this._Код_сырья = value.Код_сырья;
					}
					else
					{
						this._Код_сырья = default(int);
					}
					this.SendPropertyChanged("Склад_СиМ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
